# This compose file is meant to spin up a copy of all supported database vendors + Redis and S3 (Minio).
# For production use see the docker compose file example in the docs:
#     https://docs.directus.io/self-hosted/docker-guide.html#example-docker-compose
#
# ONLY FOR DEBUGGING. THIS IS NOT INTENDED FOR PRODUCTION USE.
#
# Ports:
#   Postgres:        5100
#   MySQL (8):       5101
#   MariaDB:         5102
#   MS SQL:          5103
#   Oracle:          5104
#   Redis:           5105
#   Minio (S3):      5106
#   Azure            5107
#   MySQL (5.7):     5108
#   Keycloak:        5110
#   Postgres (10):   5111
#   Minio Admin:     5112
#   CockroachDB:     5113
#
# Credentials:
#   Postgres:
#     User:          postgres
#     Password:      secret
#
#   MySQL:
#     User:          root
#     Password:      secret
#
#   MariaDB:
#     User:          root
#     Password:      secret
#
#   MS SQL:
#     User:          sa
#     Password:      Test@123
#
#   Oracle DB:
#     User:          secretsysuser
#     Password:      secretpassword
#     Role:          SYSDEFAULT
#     SID:           XE
#
#   Redis:
#     n/a
#
#   Minio:
#     Key:           minioadmin
#     Secret:        minioadmin
#     (Make sure to set S3_FORCE_PATH_STYLE to true)
#
#   Azure Blob Storage
#     Name:          devstoreaccount1
#     Key:           Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==
#     Container:     devstoreaccount1
#
#   Keycloak
#     User:          admin
#     Password:      secret
#
#   CockroachDB
#     User:          admin
#     Password:      --

version: '3.1'
services:
  db:
    image: postgres:15
    container_name: db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: db_label

    command: postgres -c 'max_connections=200'

    volumes:
      - ${SRC_SERVICES_DIR}/db-data-15:/var/lib/postgresql/data
      - ${SRC_SERVICES_DIR}/backups:/backups

    # ports:
      # - 5432:5432

    logging:
      driver: "json-file"
      options:
        max-size: "10m"

    networks:
      directus:
        aliases:
          - db.lan

  directus:
    build:
      context: .
      dockerfile: Dockerfile
    image: directus-f
    volumes:
      - ${SRC_SERVICES_DIR}/directus/db:/directus/database
      - ${SRC_SERVICES_DIR}/directus/uploads:/directus/uploads
      - ${SRC_SERVICES_DIR}/directus/extensions:/directus/extensions
      - ${SRC_SERVICES_DIR}/directus/media:/directus/media
    depends_on:
      - db
    # stdin_open: true
    # tty: true
    # command: sh -c "sleep 1000"

    environment:
      KEY: '255d861b-5ea1-5996-9aa3-922530ec40b1'
      SECRET: '6116487b-cda1-52c2-b5b5-c8022c45e263'
      DB_CLIENT: 'pg'
      DB_HOST: 'db.lan'
      DB_PORT: '5432'
      DB_DATABASE: 'db_label'
      DB_USER: 'postgres'
      DB_PASSWORD: '1'
    networks:
      directus:
    ports:
      - "8055:8055"
  # minio:
  #   image: minio/minio:latest
  #   command: server /data/minio/ --console-address :9001
  #   ports:
  #     - 5106:9000
  #     - 5112:9001



networks:
  directus:
    driver: bridge
